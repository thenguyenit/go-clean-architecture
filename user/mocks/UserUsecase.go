// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import models "github.com/thenguyenit/go-clean-architecture/models"

// UserUsecase is an autogenerated mock type for the UserUsecase type
type UserUsecase struct {
	mock.Mock
}

// Fetch provides a mock function with given fields: ctx, page, number
func (_m *UserUsecase) Fetch(ctx context.Context, page int, number int) ([]*models.User, error) {
	ret := _m.Called(ctx, page, number)

	var r0 []*models.User
	if rf, ok := ret.Get(0).(func(context.Context, int, int) []*models.User); ok {
		r0 = rf(ctx, page, number)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int, int) error); ok {
		r1 = rf(ctx, page, number)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: ctx, _a1
func (_m *UserUsecase) Insert(ctx context.Context, _a1 *models.User) error {
	ret := _m.Called(ctx, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.User) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
